version: '3.7'
services:
  neo4j:
    image: neo4j:${NEO4J_VERSION}
    ports:
        - "${NEO4J_HTTP_PORT:-7474}:7474"
        - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
        - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
        - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
        - NEO4J_dbms_connector_bolt_advertised__address=${HUME_ADVERTISED_ADDRESS:-localhost}:${NEO4J_PORT:-7687}
        - NEO4JLABS_PLUGINS=["apoc","graph-data-science"]
    volumes:
        - "hume_neo4j_data:/data"
  neo4j-config-cli:
    image: graphaware/neo4j-config-cli:1.3.0
    environment:
        - NEO4J_USER=neo4j
        - NEO4J_PASSWORD=password
        - NEO4J_URI=bolt://neo4j:7687
        - IMPORT_PATH=/config
    volumes:
        - "./resources/neo4j-config:/config"
  postgres:
    image: postgres:12.0
    environment:
      POSTGRES_PASSWORD: ${HUME_DB_PASSWORD:-pgsqls3cr3t}
      POSTGRES_USER: ${HUME_DB_USER:-hume}
    ports:
      - 5432:5432
  orchestra:
    image: docker.graphaware.com/public/hume-orchestra:${HUME_VERSION}
    ports:
      - 8100:8100
      - 8666:8666
    environment:
      - orchestra.startup.workflows.autoload=true
      - hume.security.encryption.engine=keystore
      - hume.security.encryption.keystore.file=/opt/hume-keystore
      - hume.security.encryption.keystore.password=changeit
      - hume.security.encryption.keystore.secret.alias=secret
    volumes:
      - ${HUME_PUBLIC_DIR:-./public}:/data
      - "./resources/keystore/hume-keystore:/opt/hume-keystore"
  api:
    image: docker.graphaware.com/public/hume-api:${HUME_VERSION}
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_USERNAME=${HUME_DB_USER:-hume}
      - SPRING_DATASOURCE_PASSWORD=${HUME_DB_PASSWORD:-pgsqls3cr3t}
      - hume.orchestra.uri=http://orchestra:8100
      - HUME_FEATURE_DRILLDOWN_ENABLED=true
      - HUME_FEATURE_PERSPECTIVE_GRAPHQL_ENABLED=true
      - HUME_FEATURE_PERSPECTIVE_ACTION_SCOPING_ENABLED=true
      - com.hume.testing.unsecure.enabled=true
      - com.hume.core.admin.setup.step.admin_creation.auto=true
      - com.hume.core.admin.setup.step.admin_creation.username=admin@hume.ga
      - com.hume.core.admin.setup.step.admin_creation.name=Auto Admin
      - com.hume.core.admin.setup.step.admin_creation.password=password
      - com.hume.core.security.license.b64=${HUME_LICENCE_KEY}
      - hume.config-as-code.enabled=true
      - hume.config-as-code.import-dir=/init
      - hume.config-as-code.autoload=true
      - GRAPHQL_KEY_TOKEN=${API_KEY_SECRET}
      - NEO4J_DB_PASSWORD=${NEO4J_PASSWORD}
      - hume.security.encryption.engine=keystore
      - hume.security.encryption.keystore.file=/opt/hume-keystore
      - hume.security.encryption.keystore.password=changeit
      - hume.security.encryption.keystore.secret.alias=secret
    volumes: 
      - "./resources/hume:/init"
      - "./resources/keystore/hume-keystore:/opt/hume-keystore"
  web:
    image: docker.graphaware.com/public/hume-web:${HUME_VERSION}
    environment:
      - HUME_API_URL=http://localhost:8080
    ports:
      - "${HUME_FRONT_PORT:-8081}:8081"
volumes:
  hume_postgres_data:
  hume_neo4j_data: